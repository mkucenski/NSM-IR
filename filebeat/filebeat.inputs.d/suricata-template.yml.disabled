- type: log
  enabled: true
  fields:
    event_source: suricata
    incident_number: ""
    incident_title: ""
    incident_dataset: ""
  fields_under_root: true
  json.keys_under_root: true
  publisher_pipeline.disable_host: true

  # Required for removeable drives whose devid may change between mounts; 
  # Populate this file with one of the following:
  #   Linux:    `lsblk -o MOUNTPOINT,UUID | grep /logs | awk '{print $2}' >> /logs/.filebeat-marker`
  #   FreeBSD:  `gpart list da0 | grep rawuuid | sed -r 's/^.*: (.+)$/\1/' >> /logs/.filebeat-marker`
  #file_identity.inode_marker.path: /[mnt]/filebeat-marker

  paths:
    - /data/incidents/[incident_number]/[incident_dataset]/suricata/eve-*.json

  processors:
    - timestamp:
        ignore_missing: true
        ignore_failure: true
        field: timestamp
        layouts:
          - '2006-01-02T15:04:05.999999-0700'
        test:
          - '2021-03-01T04:06:12.367451-0800'
    - drop_fields:
        fields: ['timestamp']

    # Common Fields
    - rename:
        ignore_missing: true
        fail_on_error: false
        fields:
          - from: "pcap_cnt"
            to: "pcap_count"
          - from: "dest_ip"
            to: "dst_ip"
          - from: "dest_port"
            to: "dst_port"
          - from: "proto"
            to: "network_protocol"
          - from: "app_proto"
            to: "application_protocol"

    # Module: alert
    - add_fields:
        when:
          has_fields: ['alert']
        fields:
          event_type: alert
    - rename:
        when:
          has_fields: ['alert']
        ignore_missing: true
        fail_on_error: false
        fields:
          - from: "gid"
            to: "signature_group_id"
          - from: "rev"
            to: "signature_version"
          - from: "signature"
            to: "signature_name"
          - from: "category"
            to: "signature_category"
          - from: "severity"
            to: "signature_severity"

    # Module: anomaly
    - add_fields:
        when:
          has_fields: ['anomaly']
        fields:
          event_type: anomaly
    - rename:
        when:
          has_fields: ['anomaly']
        ignore_missing: true
        fail_on_error: false
        fields:
          - from: "event"
            to: "signature_name"

    # Module: dhcp
    - add_fields:
        when:
          has_fields: ['dhcp']
        fields:
          event_type: dhcp
    - rename:
        when:
          has_fields: ['dhcp']
        ignore_missing: true
        fail_on_error: false
        fields:
          - from: "id"
            to: "dhcp_id"
          - from: "client_mac"
            to: "src_mac"
          - from: "assigned_ip"
            to: "dhcp_assigned_ip"
          - from: "client_ip"
            to: "src_ip"
          - from: "dhcp_type"
            to: "type_detailed"
          - from: "params"
            to: "parameters"

    # Module: dns
    - add_fields:
        when:
          has_fields: ['dns']
        fields:
          event_type: dns
    - rename:
        when:
          has_fields: ['dns']
        ignore_missing: true
        fail_on_error: false
        fields:
          - from: "qr"
            to: "dns_flags_query_response"
          - from: "rd"
            to: "dns_flags_recursion_desired"
          - from: "ra"
            to: "dns_flags_recursion_available"
          - from: "aa"
            to: "dns_flags_authoritative_answer"
          - from: "tc"
            to: "dns_flags_truncation"
          - from: "rrname"
            to: "query_name"
          - from: "rrtype"
            to: "query_type_name"
          - from: "rcode"
            to: "response_code_name"
          - from: "rdata"
            to: "response_name"
          - from: "response_ttl"
            to: "ttl"

    # Module: files
    - add_fields:
        when:
          has_fields: ['files']
        fields:
          event_type: files
    - rename:
        when:
          has_fields: ['files']
        ignore_missing: true
        fail_on_error: false
        fields:
          - from: "filename"
            to: "path"
          - from: "sid"
            to: "file_sid"
          - from: "magic"
            to: "type_detailed"
          - from: "gaps"
            to: "file_flags_gaps"
          - from: "state"
            to: "file_state"
          - from: "stored"
            to: "file_flags_stored"
          - from: "size"
            to: "size"
          - from: "tx_id"
            to: "file_tx_id"

    # Module: flow
    - add_fields:
        when:
          has_fields: ['flow']
        fields:
          event_type: flow
    - rename:
        when:
          has_fields: ['flow']
        ignore_missing: true
        fail_on_error: false
        fields:
          - from: "pkts_toserver"
            to: "src_packets"
          - from: "pkts_toclient"
            to: "dst_packets"
          - from: "bytes_toserver"
            to: "src_bytes"
          - from: "bytes_toclient"
            to: "dst_bytes"
          - from: "start"
            to: "start_time"
          - from: "end"
            to: "end_time"
          - from: "age"
            to: "duration"
          - from: "state"
            to: "connection_state"
          - from: "reason"
            to: "flow_reason"
          - from: "alerted"
            to: "flow_flags_alerted"

    # Module: http
    - add_fields:
        when:
          has_fields: ['http']
        fields:
          event_type: http
    - rename:
        when:
          has_fields: ['http']
        ignore_missing: true
        fail_on_error: false
        fields:
          - from: "hostname"
            to: "host_name"
          - from: "url"
            to: "path"
          - from: "http_user_agent"
            to: "user_agent"
          - from: "http_content_type"
            to: "content_type"
          - from: "http_method"
            to: "request_method"
          - from: "protocol"
            to: "version"
          - from: "status"
            to: "status_code"
          - from: "redirect"
            to: "url_redirect"
          - from: "length"
            to: "response_body_bytes"
          - from: "http_refer"
            to: "url_referrer"

    # Module: ikev2
    - add_fields:
        when:
          has_fields: ['ikev2']
        fields:
          event_type: ikev2
    - rename:
        when:
          has_fields: ['ikev2']
        ignore_missing: true
        fail_on_error: false
        fields:
          - from: "exchange_type"
            to: "key_exchange_type"
          - from: "message_id"
            to: "key_message_id"
          - from: "init_spi"
            to: "key_init_spi"
          - from: "resp_spi"
            to: "key_response_spi"
          - from: "role"
            to: "key_role"
          - from: "errors"
            to: "key_errors"
          - from: "payload"
            to: "key_payload"
          - from: "notify"
            to: "key_notify"

    # Module: netflow
    - add_fields:
        when:
          has_fields: ['netflow']
        fields:
          event_type: netflow
    - rename:
        when:
          has_fields: ['netflow']
        ignore_missing: true
        fail_on_error: false
        fields:
          - from: "pkts"
            to: "packet_count"
          - from: "start"
            to: "start_time"
          - from: "end"
            to: "end_time"
          - from: "age"
            to: "duration"
          - from: "min_ttl"
            to: "minimum_ttl"
          - from: "max_ttl"
            to: "maximum_ttl"

    # Module: sip
    - add_fields:
        when:
          has_fields: ['sip']
        fields:
          event_type: sip
    - rename:
        when:
          has_fields: ['sip']
        ignore_missing: true
        fail_on_error: false
        fields:
          - from: "uri"
            to: "url"
          - from: "method"
            to: "request_method"
          - from: "request_line"
            to: "request_original"

    # Module: smb
    - add_fields:
        when:
          has_fields: ['smb']
        fields:
          event_type: smb
    - rename:
        when:
          has_fields: ['smb']
        ignore_missing: true
        fail_on_error: false
        fields:
          - from: "id"
            to: "smb_id"
          - from: "dialect"
            to: "application_protocol_dialect"
          - from: "command"
            to: "command"
          - from: "session_id"
            to: "uid"
          - from: "tree_id"
            to: "smb_tree_id"
          - from: "client_dialects"
            to: "application_protocol_client_dialects"
          - from: "filename"
            to: "file_name"
          - from: "disposition"
            to: "command"
          - from: "access"
            to: "file_open_state"
          - from: "created"
            to: "file_creation_time"
          - from: "accessed"
            to: "file_accessed_time"
          - from: "modified"
            to: "file_modified_time"
          - from: "changed"
            to: "file_changed_time"
          - from: "size"
            to: "file_size"
          - from: "fuid"
            to: "file_uid"
          - from: "share"
            to: "share_name"
          - from: "request.native_os"
            to: "smb_native_os_request"
          - from: "request.native_lm"
            to: "smb_native_lm_request"
          - from: "response.native_os"
            to: "smb_native_os_response"
          - from: "response.native_lm"
            to: "smb_native_lm_response"

    # Module: smtp
    - add_fields:
        when:
          has_fields: ['smtp']
        fields:
          event_type: smtp
    - rename:
        when:
          has_fields: ['smtp']
        ignore_missing: true
        fail_on_error: false
        fields:
          - from: "helo"
            to: "smtp_helo"
          - from: "mail_from"
            to: "from"
          - from: "rcpt_to"
            to: "recipient_to"

    # Module: snmp
    - add_fields:
        when:
          has_fields: ['snmp']
        fields:
          event_type: snmp
    - rename:
        when:
          has_fields: ['snmp']
        ignore_missing: true
        fail_on_error: false
        fields:
          - from: "pdu_type"
            to: "snmp_pdu_type"
          - from: "usm"
            to: "snmp_usm"
          - from: "community"
            to: "snmp_community"
          - from: "vars"
            to: "smtp_vars"

    # Module: ssh
    - add_fields:
        when:
          has_fields: ['ssh']
        fields:
          event_type: ssh
    - rename:
        when:
          has_fields: ['ssh']
        ignore_missing: true
        fail_on_error: false
        fields:
          - from: "client.proto_version"
            to: "client_protocol_version"
          - from: "client.software_version"
            to: "client_version"
          - from: "server.proto_version"
            to: "server_protocol_version"
          - from: "server.software_version"
            to: "server_version"

    # Module: tcp
    - add_fields:
        when:
          has_fields: ['tcp']
        fields:
          event_type: tcp
    - rename:
        when:
          has_fields: ['tcp']
        ignore_missing: true
        fail_on_error: false
        fields:
          - from: "tcp_flags_ts"
            to: "src_tcp_flags"
          - from: "tcp_flags_tc"
            to: "dst_tcp_flags"
          - from: "syn"
            to: "tcp_flags_syn"
          - from: "fin"
            to: "tcp_flags_fin"
          - from: "psh"
            to: "tcp_flags_psh"
          - from: "ack"
            to: "tcp_flags_ack"
          - from: "rst"
            to: "tcp_flags_rst"
          - from: "state"
            to: "connection_state"

    # Module: tftp
    - add_fields:
        when:
          has_fields: ['tftp']
        fields:
          event_type: tftp
    - rename:
        when:
          has_fields: ['tftp']
        ignore_missing: true
        fail_on_error: false
        fields:
          - from: "packet"
            to: "command"
          - from: "file"
            to: "file_name"

    # Module: tls
    - add_fields:
        when:
          has_fields: ['tls']
        fields:
          event_type: tls
    - rename:
        when:
          has_fields: ['tls']
        ignore_missing: true
        fail_on_error: false
        fields:
          - from: "session_resumed"
            to: "tls_resumed"
          - from: "sni"
            to: "tls_sni"
          - from: "ja3"
            to: "tls_ja3c"
          - from: "ja3s"
            to: "tls_ja3cs"
          - from: "subject"
            to: "certificate_subject"
          - from: "issuer"
            to: "certificate_issuer"
          - from: "serial"
            to: "certificate_serial"
          - from: "fingerprint"
            to: "certificate_hash_sha1"
          - from: "not_before"
            to: "certificate_creation"
          - from: "not_after"
            to: "certificate_expiration"
          - from: "certificate"
            to: "certificate_base64"
          - from: "chain"
            to: "certificate_chain_base64"

    - convert:
        fields:
          #- {from: "", type: "integer, long, float, double, string, boolean, and ip"}
          #- {from: "", type: ""}
          - {from: "src_ip", type: "ip"}
          - {from: "src_port", type: "integer"}
          - {from: "dst_ip", type: "ip"}
          - {from: "dst_port", type: "integer"}
          - {from: "src_packets", type: "integer"}
          - {from: "src_bytes", type: "integer"}
          - {from: "dst_packets", type: "integer"}
          - {from: "dst_bytes", type: "integer"}
        ignore_missing: true
        fail_on_error: false

